<?xml version="1.0"?>
<project name="pancorp" default="build" basedir=".">

    <target name="init" description="Sets the timestamp properties, creates the neccessary directories and sets the compile classpath">
        <echo message="Using Java Version: ${java.version}"/>
        <property file="${basedir}/build.properties"/>

        <!-- When building a "production" version, change this property in the build.properties file -->
      <!--  <property name="version" value="Non-Official"/>-->

        <property name="lib" value="${basedir}/lib"/>
        <property name="src" value="${basedir}/src"/>
        <property name="test" value="${basedir}/test"/>
        <property name="cfg" value="${basedir}/cfg"/>
    	<!-- build directories and files -->
        <property name="build" 		value="${basedir}/build"/>
        <property name="classes" 	value="${build}/classes"/>
    	<property name="deploy" 	value="${build}/deploy"/>
        <property name="jarfile" 	value="${app}.jar"/>
        <property name="cfgjarfile" value="aaaa.${app}.cfg.jar"/>
    	<!-- end of build directories and files-->
        <property name="propsfile" value="${app}.xml"/>     
        <property name="metainf" value="${src}/META-INF"/>
        <property name="debug" value="on"/>

        <path id="compile-classpath">
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
            </fileset>
        </path>
        
    	<tstamp>
    	    <format property="buildtime" pattern="yyyy-MM-dd HH:mm:ss"/>
    	</tstamp>

    	<delete includeEmptyDirs="true" verbose="true">
    	  <fileset dir="${build}" excludes=".gitignore" includes="**/*" defaultexcludes="no"/>
    	</delete>
    	<delete includeEmptyDirs="true" verbose="true">
    	    	  <fileset dir="${dist}" excludes=".gitignore" includes="**/*" defaultexcludes="no"/>
    	</delete>
    	
        <mkdir dir="${classes}"/>
    </target>

    <target name="compile" depends="init"> <!--  depends="gen"-->
        <javac destdir="${classes}"
               debug="${debug}" 
        	   includeantruntime="true" 
        	   includeJavaRuntime="yes"
               deprecation="true"
               target="1.7"
               source="1.7">
            <src path="${src}" />
            <classpath refid="compile-classpath"/>
        	<!-- Force compile to pick up the JAXB version from the jars included in the classpath -->
        	<!-- instead of the version of JAXB that is embedded in the Java JDK. -->
        	<!--<compilerarg value="-Djava.endorsed.dirs=${basedir}/lib"/>-->
        </javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${deploy}"/>
    
     <!--   <copy file="${metainf}/ejb-jar.xml" tofile="${ejb.build}/META-INF/ejb-jar.xml" />
        <copy file="${metainf}/weblogic-ejb-jar.xml" tofile="${ejb.build}/META-INF/weblogic-ejb-jar.xml" />
        -->

        <copy todir="${ejb.build}">
            <fileset dir="${classes}">
                <include name="ca/gc/cra/fxit/${app}/batch/**/*.class"/>         
            	<include name="ca/gc/cra/fxit/${app}/dao/**/*.class"/>   
            	<include name="ca/gc/cra/fxit/${app}/exception/**/*.class"/>
            	<include name="ca/gc/cra/fxit/${app}/generated/**/*.class"/>   
            	<include name="ca/gc/cra/fxit/${app}/job/**/*.class"/>   
            	<include name="ca/gc/cra/fxit/${app}/model/**/*.class"/>
            	<include name="ca/gc/cra/fxit/${app}/resources/*.xml"/>   
            	<include name="ca/gc/cra/fxit/${app}/resources/**/*.xsd"/> 
            	<include name="ca/gc/cra/fxit/${app}/task/**/**/*.class"/>
            	<include name="ca/gc/cra/fxit/${app}/util/**/*.class"/>
            </fileset>
        </copy>
    	
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources" />
    	<copy todir="${ejb.build}/ca/gc/cra/fxit/${app}/resources">
    		 <fileset dir="${src}/ca/gc/cra/fxit/${app}/resources">
    		      <include name="fxit.xmlt.batch.xml" />
    		 </fileset>
    	</copy>
    	
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema" />
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/crs" />
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/cbc" />
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/etr" />
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/ftc" />
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/metadata" />
    	<mkdir dir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/statusmessage" />
    	
    	<copy todir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/crs" >
    		<fileset dir="${src}/ca/gc/cra/fxit/${app}/resources/schema/crs" >
    			<include name="*.xsd" /> 
    		</fileset>
    	</copy>
    	
    	<copy todir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/cbc" >
    	    <fileset dir="${src}/ca/gc/cra/fxit/${app}/resources/schema/cbc" >
    	    	<include name="*.xsd" /> 
    	    </fileset>
    	</copy>
    	
    	<copy todir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/etr" >
    	    <fileset dir="${src}/ca/gc/cra/fxit/${app}/resources/schema/etr">
    	    	<include name="*.xsd" /> 
    	    </fileset>
    	</copy>
    	
    	<copy todir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/ftc" >
    	    <fileset dir="${src}/ca/gc/cra/fxit/${app}/resources/schema/ftc">
    	    	<include name="*.xsd" /> 
    	    </fileset>
    	</copy>
    	
    	<copy todir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/metadata" >
    		 <fileset dir="${src}/ca/gc/cra/fxit/${app}/resources/schema/metadata">
    		    <include name="*.xsd" /> 
    		</fileset>
    	</copy>
    	
    	<copy todir="${ejb.build}/ca/gc/cra/fxit/${app}/resources/schema/statusmessage" >
    	    <fileset dir="${src}/ca/gc/cra/fxit/${app}/resources/schema/statusmessage">
    	    	<include name="*.xsd" /> 
    	    </fileset>
    	</copy>

        <jar destfile="${jarsdir}/${jarfile}" 
             basedir="${ejb.build}" 
             update="true" />
    </target>

    <target name="cfgjar" depends="init">
        <!--        
        Bundle the configuration files in their own jar.  This jar will be
        stored in the ear file's lib directory, so that we don't have 
        to use a manifest in the ejb jar.  
        
        The ear classloader loads the /lib jar files alphabetically, so
        we're calling this one "aaaa.fxit.ctsagent.cfg.jar" to 
        ensure that it's first in the list.    
        --> 
        

        <!-- apply platform-specific log location -->
    <!--    <replace file="${cfg}/log4j.xml" token="@@log_directory@@" value="${log4j.dir}"/>-->
        
        <jar update="true" destfile="${jarsdir}/${cfgjarfile}" basedir="${cfg}">
            <!-- include configuration files -->
            <include name="log4j.xml" />
            <manifest>
                <attribute name="Built-By"                value="${user.name}"/>
                <attribute name="Built-On"                value="${buildtime}" />
                <attribute name="Implementation-Title"    value="fxit.${app} application"/>
                <attribute name="Implementation-Version"  value="${version}"/>
                <attribute name="Implementation-Vendor"   value="development centre"/>
            </manifest>
        </jar>
  
    </target>   

    <target name="ear" depends="jar,cfgjar" description="Create the ear file"> <!-- war,-->
        <ear earfile="${dist}/${earfile}"
             appxml="${metainf}/application.xml"
             update="true" >
            <manifest>
                <attribute name="Built-By"                   value="${user.name}"/>
                <attribute name="Built-On"                   value="${buildtime}" />
                <section name="Versioning">
                	<attribute name="Specification-Title"    value="${app} Application"/>
                	<attribute name="Specification-Version"  value="${version} ${buildtime}"/>
                	<attribute name="Specification-Vendor"   value="Development Center"/>
                    <attribute name="Implementation-Title"   value="${app} Application"/>
                    <attribute name="Implementation-Version" value="${version} ${buildtime}"/>
                    <attribute name="Implementation-Vendor"  value="Development Centre"/>
                </section>
            </manifest>

            <metainf dir="${metainf}">
                <include name="weblogic-application.xml" />
            </metainf>            
            
            <!-- include application jar file -->
            <fileset dir="${jarsdir}">
                <include name="${jarfile}" />
            </fileset>
            
            <!-- include third-party libraries -->                        
            <fileset dir="${basedir}">
                <include name="lib/*.jar" />
            </fileset>

            <!-- include cfg jar in ear /lib directory -->                      
            <zipfileset dir="${jarsdir}" prefix="lib" >
                <include name="${cfgjarfile}" />
            </zipfileset>
            
        </ear>
        
        <!-- precompile jsps, generate ejb stubs, etc. --> 
        <echo message="running weblogic.appc"/>
        <java classname="weblogic.appc" fork="yes" dir="${build}" failonerror="yes" classpathref="compile-classpath">
            <!--<jvmarg line="-Xms128M -Xmx256M -Djava.io.tmpdir=c:/temp -XX:+UseParallelGC" />-->
        	<jvmarg line="-Xms128M -Xmx256M -Djava.io.tmpdir=c:/temp" />
            <arg line=" -verbose -keepgenerated -iiop -basicclientjar ${dist}/${earfile} -target 1.7 -source 1.7"/>
        </java>
        
    </target>

    <target name="clean" depends="init">
    	<delete includeEmptyDirs="true" verbose="true">
        	  <fileset dir="${build}" excludes=".gitignore" includes="**/*" defaultexcludes="no"/>
        </delete>
    	<delete includeEmptyDirs="true" verbose="true">
    	    	  <fileset dir="${dist}" excludes=".gitignore" includes="**/*" defaultexcludes="no"/>
    	</delete>
    </target>

    <target name="deploy" depends="build">
        <copy todir="${appsdir}" file="${dist}/${earfile}"/>
        <copy todir="${envdir}" file="${cfg}/${propsfile}"/>
    </target>

    <target name="build" depends="ear">
    </target>

	<target name="jaxbgen" depends="init" description="Generate Java source files from  XML schema">

    	<!-- Use a customized copy of the schema to avoid failure to pass invalid country/currency codes as-is from the flat file to XML. -->
    	<!-- This code invokes xjc from the JAXB RI jars in the implementation\lib folder. -->   
    	<echo message="generating java classes.dir from XML schema...${schema.custom}" />
    	<xjc schema="${schema.custom}main_schema.xsd" 
        	destdir="${src}" 
        	package="ca.gc.cra.fxit.xmlt.generated.jaxb.${schema.type}">
            <depends dir="${schema.custom}">
            	<!--files for crs-->
            	<!--                
            	<include name="oecdtypes_v4.1.xsd"/>
            	<include name="isocrstypes_v1.1.xsd"/>
            	<include name="FatcaTypes_v1.0.xsd"/>
            	<include name="CommonTypesFatcaCrs_v1.1.xsd"/>
            	-->
            	<!-- end of files for crs-->
            	
            	<!-- files for cbc-->
            	<!--<include name="oecdtypes_v4.1.xsd"/>-->
            	<!--<include name="isocbctypes_v1.0.xsd"/>-->
            	<!-- end of files for cbc-->
            	
            	<!-- files for etr-->
            	<!--<include name="oecdtypes_v4.1.xsd"/>-->
            	<!--<include name="isoetrtypes_v1.0.xsd"/>-->
            	<!-- end of files for etr-->
            	
            	<!-- files for ftc-->
            <!--<include name="oecdtypes_v4.2.xsd"/>
            	<include name="isofatcatypes_v1.1.xsd"/>
            	<include name="stffatcatypes_v2.0.xsd"/>-->
            	<!-- end of files for ftc-->         
            	
            	<!-- files for metadata-->
            	<!--<include name="isoctstypes_v1.0.xsd"/>-->
            	<!-- end of files for etr-->
            	
            	<!-- files for statusmessage-->
            	<!--<include name="isocsmtypes_v1.0.xsd"/>-->
            	<!-- end of files for etr-->
            	
            	<include name="main_schema.xsd"/>
            </depends>
            <produces dir="${src}/ca/gc/cra/fxit/xmlt/generated/jaxb/${schema.type}">
                <include name="*.java"/>
            </produces>
        </xjc>   
    	<!-- This code invokes xjc from the JDK. -->
    	<!--  
        <echo message="generating java classes from XML schema..."/>
    	<exec executable="xjc">
    		<arg line="-d ${src}/ -p ca.gc.cra.fxit.xmlt.generated.jaxb ${schema.custom}main_schema.xsd"/>
    	</exec>
    	-->

	</target>
	
	<!-- cfg/fxit.${app}.batch.xml-->

	<target name="startBatch" depends="init" description="Initiate the batch process.">	
		<java classname="ca.gc.ccra.rccr.batch.BatchController" classpathref="compile-classpath" fork="true">
			<arg line="-user fxitrunas -password webl0g1c -server t3://localhost:7001 ${src}/ca/gc/cra/fxit/${app}/resources/fxit.${app}.batch.xml" />		
		</java>	
	</target>
	
</project>
